{
  "name": "hoodie-plugin-angularjs",
  "description": "Hoodie plugin to connect to angularJS",
  "version": "0.0.15",
  "repository": {
    "type": "git",
    "url": "http://github.com:elmarburke/hoodie-plugin-angularjs.git"
  },
  "devDependencies": {
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-shell": "~0.6.1",
    "load-grunt-tasks": "~0.2.1",
    "grunt": "~0.4.2",
    "grunt-bump": "0.0.13",
    "karma-script-launcher": "~0.1.0",
    "karma-chrome-launcher": "~0.1.1",
    "karma-html2js-preprocessor": "~0.1.0",
    "karma-firefox-launcher": "~0.1.2",
    "karma-jasmine": "~0.1.4",
    "karma-coffee-preprocessor": "~0.1.1",
    "requirejs": "~2.1.9",
    "karma-requirejs": "~0.2.0",
    "karma-phantomjs-launcher": "~0.1.1",
    "karma": "~0.10.8",
    "grunt-karma": "~0.6.2",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-ngmin": "0.0.3"
  },
  "readme": "[Hoodie](http://hood.ie) [AngularJS](http://angularjs.org/) [Plugin](http://hood.ie/#plugins)\n======================\n[![Dependency Status](https://david-dm.org/elmarburke/hoodie-plugin-angularjs.png)](https://david-dm.org/elmarburke/hoodie-plugin-angularjs)\n[![devDependency Status](https://david-dm.org/elmarburke/hoodie-plugin-angularjs/dev-status.png)](https://david-dm.org/elmarburke/hoodie-plugin-angularjs#info=devDependencies)\n\nHoodie goes angular in a cozy way!\n\nA lot is missing, but the good news are: you can [contribute](https://github.com/elmarburke/hoodie-plugin-angularjs/fork)!\n\nA little bit about the plugin.\n\nInstall\n-------\n\n`$ hoodie install angularjs` in your project folder will install the plugin. You need to load angular **BEFORE** hoodie.\n\nInitialize hoodie and load the plugin into angular. add the module name `hoodie` to your module array. Example:\n\n```js\n// Init Hoodie\nvar hoodie  = new Hoodie()\nwindow.hoodie = hoodie;\n\n// Init Angular\nangular.module('worldDominationApp', ['hoodie'])\n```\n\nServices\n--------\n\nThere are currently four services. hoodie, hoodieAccount, hoodieStore and hoodieArray.\n\n### `hoodie`\n\nUse hoodieProvider.url(String) to configure your app's hoodie url at startup.  Scroll down for an example.\n\nYou can then inject `hoodie` with dependency injection anywhere to get your plain old hoodie instance.  For more angular-friendly services, use the below.\n\n### `hoodieAccount`\n\nUse the same [API like plain hoodie](http://hood.ie/#docs). Use dependency Injection.\n\n### `hoodieStore`\n\nUse the same [API like plain hoodie](http://hood.ie/#docs). Use dependency Injection if you want to use this. We recommend you to use `hoodieArray`.\n\n### `hoodieArray`\n\nAdd `hoodieArray` to your di-array. With the bind method you could bind an array to your hoodie store.\n\n#### `hoodieArray.bind(scope, store[, hoodieStore])`\n\n* **scope**: the scope to bind with. Normaly `$scope`\n* **store**: the place were the store binds to.\n* **hoodieStore**: Optional. the store name in hoodie. If unset, store will be used.\n\nExample:\n\n```js\nangular.module('worldDominationApp', ['hoodie'])\n\n.config(function(hoodieProvider) {\n  hoodieProvider.url('http://myhoodie.com/_api');\n})\n\n.controller('TodoCtrl', function ($scope, hoodieArray) {\n\n  $scope.delete = function(item) {\n    var idx = $scope.todos.indexOf(item);\n    $scope.todos.splice(idx, 1);\n  };\n\n  $scope.add = function (title) {\n    $scope.todos.push({\n      title: title\n    });\n    $scope.newTodo = '';\n  }\n\n  hoodieArray.bind($scope, 'todos', 'todo');\n});\n```\n\nDevelopment\n-----------\n\nWe use [grunt](http://gruntjs.com) to build and [karma](http://karma-runner.github.io) to test, with [bower](http://bower.io) to install test dependencies.  To setup your development environment:\n\n- `grunt`\n- `npm install`\n- `bower install`\n\nThen, run `grunt` to build and test.  Run `grunt dev` to start the test server and test every save.  \n\n### Build & Release Process\n\nRun `grunt release`, which will do the following;\n- `grunt build` to concat the source files and wrap them in Hoodie.extend()\n- Move built file from `dist` to project root , using `grunt shell:release`.  We keep the concatenated file in dist by default so it cannot be accidentally commited.\n- Use `grunt bump` to commit, tag, and publish\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/elmarburke/hoodie-plugin-angularjs/issues"
  },
  "homepage": "https://github.com/elmarburke/hoodie-plugin-angularjs",
  "_id": "hoodie-plugin-angularjs@0.0.15",
  "_from": "hoodie-plugin-angularjs@"
}
